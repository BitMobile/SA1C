
#Region CommonProcedureAndFunctions

&AtServer
Procedure FillRegisterAtServer()
	
	// Save old data
	Query = New Query;
	Query.Text = 
		"SELECT
		|	DefaultValues.Object,
		|	DefaultValues.TabularSection,
		|	DefaultValues.Attribute,
		|	DefaultValues.TypeName,
		|	DefaultValues.Value
		|FROM
		|	InformationRegister.DefaultValues AS DefaultValues";
	
	OldValues = Query.Execute().Unload();
	
	// Clear register
	RecordSet = InformationRegisters.DefaultValues.CreateRecordSet();
	RecordSet.Write();
	
	// Fill catalogs
	ReadMetadataCollection(Metadata.Catalogs, OldValues);
	
	// Fill documents
	ReadMetadataCollection(Metadata.Documents, OldValues);
	
EndProcedure

&AtServer
Procedure ReadMetadataCollection(Collection, OldValues)
	
	For Each ItemMetadata In Collection Do 
		
		If ItemMetadata.Name = "bitmobile_НастройкиМобильныхПриложений"
			Or ItemMetadata.Name = "bitmobile_НастройкиСинхронизации"
			Or ItemMetadata.Name = "OutletsPrimaryParametersSettings"
			Or ItemMetadata.Name = "SystemObjects"
			Or ItemMetadata.Name = "RolesOfUsers"
			Or ItemMetadata.Name = "MobileAppAccessRights"
			Or ItemMetadata.Name = "AdditionalAccessRights" 
			Or ItemMetadata.Name = "Guestbook" Then 
			
			Continue;
			
		EndIf;
		
		For Each AttrItem In ItemMetadata.StandardAttributes Do 
			
			If AttrItem.FillChecking = FillChecking.ShowError Then 
				
				NewRecord					= InformationRegisters.DefaultValues.CreateRecordManager();
				NewRecord.Object			= ItemMetadata.Name;
				NewRecord.TabularSection	= "";
				NewRecord.Attribute			= AttrItem.Name;
				
				For Each TypeItem In AttrItem.Type.Types() Do 
					
					NewRecord.TypeName		=  NewRecord.TypeName + GetTypeName(TypeItem) + ",";
					
				EndDo;
				
				NewRecord.TypeName			= Left(NewRecord.TypeName, StrLen(NewRecord.TypeName) - 1);				
				NewRecord.Value				= GetValue(NewRecord, OldValues);
				
				NewRecord.Write();
				
			EndIf;
			
		EndDo;
		
		For Each AttrItem In ItemMetadata.Attributes Do 
			
			If ItemMetadata.Name = "User" And AttrItem.Name = "UserName" Then 
				
				Continue;
				
			EndIf;
			
			If AttrItem.FillChecking = FillChecking.ShowError Then 
				
				NewRecord					= InformationRegisters.DefaultValues.CreateRecordManager();
				NewRecord.Object			= ItemMetadata.Name;
				NewRecord.TabularSection	= "";
				NewRecord.Attribute			= AttrItem.Name;
				
				For Each TypeItem In AttrItem.Type.Types() Do 
					
					NewRecord.TypeName		=  NewRecord.TypeName + GetTypeName(TypeItem) + ",";
					
				EndDo;
				
				NewRecord.TypeName			= Left(NewRecord.TypeName, StrLen(NewRecord.TypeName) - 1);
				NewRecord.Value				= GetValue(NewRecord, OldValues);
				
				NewRecord.Write();
				
			EndIf;
			
		EndDo;
		
		For Each TSItem In ItemMetadata.TabularSections Do 
			
			If ItemMetadata.Name = "VisitPlan" And TSItem.Name = "Outlets" Then 
			
				Continue;
				
			EndIf;
			
			For Each AttrItem In TSItem.Attributes Do
			
				If AttrItem.FillChecking = FillChecking.ShowError Then 
					
					NewRecord					= InformationRegisters.DefaultValues.CreateRecordManager();
					NewRecord.Object			= ItemMetadata.Name;
					NewRecord.TabularSection	= TSItem.Name;
					NewRecord.Attribute			= AttrItem.Name;
					
					For Each TypeItem In AttrItem.Type.Types() Do 
						
						NewRecord.TypeName		=  NewRecord.TypeName + GetTypeName(TypeItem) + ",";
						
					EndDo;
					
					NewRecord.TypeName			= Left(NewRecord.TypeName, StrLen(NewRecord.TypeName) - 1);
					NewRecord.Value				= GetValue(NewRecord, OldValues);
					
					NewRecord.Write();
					
				EndIf;
				
			EndDo;
			
		EndDo;
		
	EndDo;
	
EndProcedure

&AtServer
Function GetValue(NewRecord, OldValues)
	
	FoundStructure = New Structure("Object, TabularSection, Attribute, TypeName", NewRecord.Object, NewRecord.TabularSection, NewRecord.Attribute, NewRecord.TypeName);
	
	FoundedRows = OldValues.FindRows(FoundStructure);
	
	If FoundedRows.Count() = 0 Then 
		
		Return Undefined;
		
	Else 
		
		Return FoundedRows[0].Value;
		
	EndIf;
	
EndFunction

&AtServer
Function GetTypeName(mType)
	
	MetadataOfType = Metadata.FindByType(mType);
	
	If MetadataOfType = Undefined Then  
		
		Return mType;
		
	Else 
		
		FullTypeName = MetadataOfType.FullName();
		
		DotPosition = Find(FullTypeName, ".");
		
		LeftPart = Left(FullTypeName, DotPosition - 1);
		
		FullTypeName = StrReplace(FullTypeName, LeftPart, LeftPart + "Ref"); 
		
		Return FullTypeName;
		
	EndIf;
	 	
EndFunction

#EndRegion

#Region UserInterface

&AtClient
Procedure FillRegister(Command)
	
	FillRegisterAtServer();
	
	Items.List.Refresh();
	
EndProcedure

#EndRegion