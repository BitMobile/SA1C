// Проверяет возможность запуска с пустым списком пользователей для клиентских соединений.
//
// Для фоновых заданий, внешних соединений, вызовов веб-сервисов запуск с
// пустым списком пользователей всегда возможен - для пустого пользователя ИБ
// всегда используется пользователь <Не указан> справочника Пользователи.
//
// В случае, когда основная роль пустого пользователя не обеспечивает
// требуемых прав в обработчике фонового задания или веб-сервиса,
// привилегированный режим устанавливается прямо в обработчике.
// Для внешних соединений можно использовать запуск в привилегированном
// режиме (параметр командной строки "/UsePrivilegedMode").
//
Функция ПроверитьВозможностьЗапускаСПустымСпискомПользователейИБ(ВернутьТекстОшибки = Ложь) Экспорт
	
	Если ПривилегированныйРежим() Тогда
		// Выполнен запуск в привилегированном режиме
		// (параметр командной строки "/UsePrivilegedMode").
		//
		// В этом режиме пользователь имеет все права,
		// первого администратора не требуется создавать.
		Возврат "";
	КонецЕсли;
	
	ТекущийПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Если ЗначениеЗаполнено(ТекущийПользовательИБ.Имя) Тогда
		// Список пользователей ИБ не пустой.
		Возврат "";
	КонецЕсли;
	
	ОсновнаяРоль = Метаданные.ОсновнаяРоль;
	//
	//Если ОсновнаяРоль = Неопределено Тогда
	//	// Основная роль не назначена, поэтому пустой пользователь
	//	// имеет права, соответствующие привилегированному режиму.
	//	Возврат "";
	//КонецЕсли;
	//
	//Если ПравоДоступа("Администрирование", Метаданные, ОсновнаяРоль) Тогда
	//	// Когда основная роль имеет право Администрирование предполагается,
	//	// что она содержит все права необходимые для администрирования.
	//	Возврат "";
	//КонецЕсли;
	//
	//Если НЕ ПравоДоступа("Администрирование", Метаданные, ТекущийПользовательИБ) Тогда
	//	// Список пользователей не пустой.
	//	//
	//	// Когда основная роль не содержит право Администрирование,
	//	// а пустой текущий пользователь содержит право Администрирование,
	//	// то оно было добавлено принудительно, что возможно только при пустом
	//	// списке пользователей информационной базы.
	//	Возврат "";
	//КонецЕсли;
	
	ТекстОшибки =
		NStr("ru='Запуск с пустым списком пользователей информационной базы невозможен.
		           |Добавить пользователя Admin и перезапустить программу?
		           |
		           |Пояснение: также можно завершить работу и вручную добавить в список
		           |пользователей информационной базы учетную запись администратора с ролью
		           |""Admin"" и повторить запуск программы от его имени.
		           |
		           |Для перехода к списку пользователей информационной базы необходимо открыть
		           |Конфигуратор и воспользоваться пунктом меню ""Администрирование - Пользователи"".';
				   |en='You cannot start with empty information base users list. Add user Admin 
				   |and restart program?
				   |
				   |Explanation: you can close programm and add to information base users list
				   |account with role ""Admin"" and start program again with his name.
				   |
				   |If you want to go to information base users list, you must open Designer and 
				   |use menu item ""Administration - Users"".'");

	
	Если НЕ ВернутьТекстОшибки Тогда
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции

// Только для внутреннего использования.
Процедура СоздатьПервогоАдминистратораСистемы() Экспорт
	
	ТекстОшибки = ПользователиСлужебныйВызовСервера.ПроверитьВозможностьЗапускаСПустымСпискомПользователейИБ(Истина);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		УстановитьПривилегированныйРежим(Истина);
		
		Администратор = ПользователиИнформационнойБазы.СоздатьПользователя();
		Администратор.Имя = "Admin";
		Администратор.ПолноеИмя = Администратор.Имя;
		Администратор.Язык = Метаданные.Языки.Русский;
		Администратор.АутентификацияСтандартная = Истина;
		Администратор.ПоказыватьВСпискеВыбора   = Истина;
		Администратор.Роли.Добавить(Метаданные.Роли.Admin);
		Администратор.Записать();
		
		//ПользователиСлужебный.УстановитьНачальныеНастройки(Администратор.Имя);
		
	КонецЕсли;
	
КонецПроцедуры


