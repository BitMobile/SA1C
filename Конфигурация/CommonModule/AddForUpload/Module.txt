
Procedure CatalogBeforeWriteHandler(Source, Cancel) Export
	
    If IsInRegister(Source) = Undefined Then
    	Return;
    EndIf;
	
    Source.AdditionalProperties.Insert("UnmarkDel", Source.Ref.DeletionMark);
    Source.AdditionalProperties.Insert("IsNew", Source.IsNew());
    
EndProcedure

Procedure DocumentBeforeWriteHandler(Source, Cancel, WriteMode, PostingMode) Export

    If IsInRegister(Source) = Undefined Then
    	Return;
    EndIf;
	
    Source.AdditionalProperties.Insert("UnmarkDel", Source.Ref.DeletionMark);
    Source.AdditionalProperties.Insert("IsNew", Source.IsNew());
    
EndProcedure

Procedure WriteHandler(Source, Cancel) Export
	
	Position = IsInRegister(Source); 
	
    If Position = Undefined Then
    	Return;
    EndIf;

    If NOT Source.AdditionalProperties.Property("Downloaded") OR Source.AdditionalProperties.Property("DownloadedNew") Then     
		
		Record = InformationRegisters.ChangedData.CreateRecordManager();
        Record.Ref = Source.Ref;
        Record.Read();
        
    	If Source.AdditionalProperties["IsNew"] Then
        	If Source.AdditionalProperties.Property("DownloadedNew") Then 
            	Record.Status = Enums.DataStatus.Modified;
                Source.AdditionalProperties.DownloadedNew = False;
            Else    
                Record.Status = Enums.DataStatus.New;
            EndIf;    
        Else
            If Record.Status = Enums.DataStatus.New Then 
                Record.Status = Enums.DataStatus.New;
            Else 
                Record.Status = Enums.DataStatus.Modified;
            EndIf;
        EndIf;
        
        Record.Modified = CurrentDate();	
        Record.Ref = Source.Ref;
		Record.Position = Position;
        Record.Write();
		
    EndIf;
    
    If TypeOf(Source) = Type("DocumentObject.Order") Then      
		
		If Source.Status=Enums.OrderSatus.New or Source.Status=Enums.OrderSatus.EmptyRef() Then
            Source.Status=Enums.OrderSatus.Sent;
		EndIf;
		
        For Each Row In Source.SKUs Do
            Row.Amount = Row.Total*Row.Qty;
		EndDo;
		
    EndIf;                                                                   
    
    If Source.AdditionalProperties.Property("Downloaded") Then 
		
		If Source.AdditionalProperties.Downloaded Then
            Source.AdditionalProperties.Downloaded = False;
            Source.Write();
		EndIf;
		
    EndIf;    
    
EndProcedure

Function IsInRegister(Source)

	Query = new Query;
    Query.Text =
	    "SELECT
	    |	SyncOrder.MetadataObject,
	    |	SyncOrder.Upload,
	    |	SyncOrder.Download,
	    |	SyncOrder.Filter,
	    |	SyncOrder.Position
	    |FROM
	    |	InformationRegister.SyncOrder AS SyncOrder
	    |WHERE
	    |	SyncOrder.MetadataObject = &MetadataObject
	    |	AND SyncOrder.Upload = TRUE";
	
	Query.SetParameter("MetadataObject", Source.Metadata().FullName());
	
	Result =  Query.Execute().Unload();
	
	If Result.Count() > 0 Then
        Return Result[0].Position;
    Else
        Return Undefined;
    EndIf;

EndFunction // IsInRegister()



