
Function GetTerritory(Outlet) Export
	
	Query = New Query;
	
	Query.Text = "SELECT ALLOWED TOP 1
				|	TerritoryOutlets.Ref
				|FROM
				|	Catalog.Territory.Outlets AS TerritoryOutlets
				|WHERE
				|	TerritoryOutlets.Outlet = &Outlet";
	
	Query.SetParameter("Outlet", Outlet);
	
	Selection = Query.Execute().Select();
	Selection.Next();
	
	Return Selection.Ref;	
	
EndFunction

Function GetPredefinedItems(PredefinedItems) Export 
	
	ItemsMap = New Map;
	
	For Each Row In PredefinedItems Do
		
		If Row.Key = "Catalog.User" Then
			
			Query = New Query;
			Query.Text = "SELECT ALLOWED
						|	User.Ref AS Ref
						|FROM
						|	Catalog.User AS User
						|WHERE
						|	User.Role = &Role";
			
			Query.SetParameter("Role", "SR");
			
		Else
			
			Query = New Query;
			Query.Text = "SELECT ALLOWED Ref FROM " + Row.Key;
			
		EndIf;
		
		Result = Query.Execute().Unload();
		
		If Result.Count() = 1 Then
			
			ItemsMap.Insert(Row.Value, Result[0].Ref);
			
		EndIf;
		
	EndDo;
	
	Return ItemsMap;
	
EndFunction

Function GetQuestionGroupType(TypeString = "SKUQuestions") Export
	
	If TypeString = "SKUQuestions" Then 
		
		Return Enums.QuestionGroupTypes.SKUQuestions;
		
	Else 
		
		Return Enums.QuestionGroupTypes.RegularQuestions;
		
	EndIf;
	
EndFunction

Function StringToNumber(String) Export
	
	Try
		
		Result = Number(String);
		
	Except
		
		Result = 0;
		
	EndTry;
	
	Return Result;
	
EndFunction

Procedure FillDefaultValues_DocumentBeforeWrite(Source, Cancel, WriteMode, PostingMode) Export
	
	If Source.DataExchange.Load Or Source.AdditionalProperties.Property("ЗагрузкаBitmobile") Then 
		
		FillDefaultValues(Source, Source.AdditionalProperties.Property("ЗагрузкаBitmobile"));
		
	EndIf;
	
EndProcedure

Procedure FillDefaultValues_CatalogBeforeWrite(Source, Cancel) Export
	
	If Source.DataExchange.Load Or Source.AdditionalProperties.Property("ЗагрузкаBitmobile") Then 
		
		FillDefaultValues(Source, Source.AdditionalProperties.Property("ЗагрузкаBitmobile"));
		
	EndIf;
	
	If TypeOf(Source) = Type("CatalogObject.Outlet") Then 
		
		If Source.AdditionalProperties.Property("DeleteЗагрузкаBitmobile") And Source.AdditionalProperties.Property("ЗагрузкаBitmobile") Then 
			
			Source.AdditionalProperties.Delete("ЗагрузкаBitmobile");
			
		EndIf;
		
	EndIf;
	
EndProcedure

Procedure FillDefaultValues(Source, IsBMLoad)
	
	Query = New Query;
	Query.Text = 
		"SELECT
		|	DefaultValues.Object AS Object,
		|	DefaultValues.TabularSection AS TabularSection,
		|	DefaultValues.Attribute AS Attribute,
		|	DefaultValues.Value,
		|	DefaultValues.TypeName
		|FROM
		|	InformationRegister.DefaultValues AS DefaultValues
		|WHERE
		|	DefaultValues.Object = &ObjectName
		|
		|ORDER BY
		|	Object,
		|	TabularSection,
		|	Attribute";
	
	Query.SetParameter("ObjectName", Source.Metadata().Name);
	
	DefaultValuesTable = Query.Execute().Unload();
	
	TabularSectionsTable = DefaultValuesTable.Copy();
	
	TabularSectionsTable.GroupBy("TabularSection");
	
	For Each TabularSectionsRow In TabularSectionsTable Do 
		
		ProcessedData = DefaultValuesTable.FindRows(New Structure("TabularSection", TabularSectionsRow.TabularSection));
		
		If ValueIsFilled(TabularSectionsRow.TabularSection) Then // TS attributes 
			
			For Each TSItem In Source[TabularSectionsRow.TabularSection] Do 
				
				For Each ProcessedValue In ProcessedData Do  
				
					If ValueIsFilled(ProcessedValue.Value) And Not ValueIsFilled(TSItem[ProcessedValue.Attribute]) Then 
						
						Try
							
							TSItem[ProcessedValue.Attribute] = ProcessedValue.Value;
							
						Except
						
						EndTry;
						
						If IsBMLoad Then 
							
							Source.AdditionalProperties.Delete("ЗагрузкаBitmobile");
							
							IsBMLoad = False;
							
						EndIf;
						
					EndIf;
					
				EndDo;
				
			EndDo;
			
		Else // Object attributes
			
			For Each ProcessedValue In ProcessedData Do  
				
				If ValueIsFilled(ProcessedValue.Value) And Not ValueIsFilled(Source[ProcessedValue.Attribute]) Then 
					
					Try
						
						Source[ProcessedValue.Attribute] = ProcessedValue.Value;
						
					Except
					
					EndTry;
					
					If IsBMLoad Then 
						
						Source.AdditionalProperties.Delete("ЗагрузкаBitmobile");
						
						IsBMLoad = False;
						
					EndIf;
					
				EndIf;
				
			EndDo;
			
		EndIf;
		
	EndDo;
	
EndProcedure

