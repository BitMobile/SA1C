  <!DOCTYPE html>
    <html>
    <head>
    <meta name="" content="initial-scale=1.0, user-scalable=yes" />
    <style type="text/css">
    html { height: 100% }
    body { height: 100%; margin: 0px; padding: 0px }
    #map_canvas { height: 100% }
    .buttonopendoc {
		background-color:#63b8ee;
		border:1px solid #3866a3;
		color:#fff;
		font-family:Verdana;
		font-size:12px;
		font-weight:bold;
		font-style:normal;
		height:20px;
		width:140px;
		text-decoration:none;
		text-align:center;
		margin-left:20px;
	}
	.buttonopendoc:hover {
		background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #468ccf), color-stop(1, #63b8ee) );
		background:-moz-linear-gradient( center top, #468ccf 5%, #63b8ee 100% );
		filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#468ccf', endColorstr='#63b8ee');
		background-color:#468ccf;
	}.buttonopendoc:active {
		position:relative;
		top:1px;
    </style>
    <script type="text/javascript"
        src="http://maps.google.com/maps/api/js?sensor=true">
 
    </script>
    <script type="text/javascript">
   
    // переменные карты
    var directionsDisplay;
	var directionsService = new google.maps.DirectionsService();
	var map;
	
	// переменные маркеров
	var infoWindow = new google.maps.InfoWindow;
	var markersArray = [];
	
	////////////////// объявление глобальных переменных для веб-клиента
			
	// переменные полилиний
	var polylineArray = [];
	var SR = null;
	var StartLat = "NaN";
	var StartLng = "NaN";
		
    function initialize() {
	  
		geocoder = new google.maps.Geocoder();
	  
		directionsDisplay = new google.maps.DirectionsRenderer();
	  
		var mapOptions = {
			zoom: 11,
			panControl: false,
			streetViewControl: false,
  			overviewMapControl: false,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		}
	  
		map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
	  
		directionsDisplay.setMap(map);
	  	  
		geocoder.geocode( { 'address': StartAdress}, function(results, status) {
	      
		  if (status == google.maps.GeocoderStatus.OK) {
	        map.setCenter(results[0].geometry.location);
	      } else {
	        alert("Не удалось получить начальные координаты по причине: " + status);
	      }
		
		});
		
		google.maps.event.addListener(map, 'click', function() {
		   infoWindow.close();
	    });
	    
	    ////////////////// вызов показа маркеров в веб-клиенте
	    
	}

    function showMarkers(ArrayInString, BtnLabel, Diff) {
	  
		SR = null;
		StartLat = "NaN";
		StartLng = "NaN";
	
		var ArrayFromString = ArrayInString.split("/////");
			  
	  	for (var i = 0; i < ArrayFromString.length; i++) {
	  
			var ParamsString = ArrayFromString[i];
			
			var ParamsArray = ParamsString.split("-=-");
	  	  
	  	  	addMarker(ParamsArray, BtnLabel, Diff); 	  	  
	  	}
	  		  	 	  		  	
	}

	function addMarker(ParamsArray, BtnLabel, Diff) {
	
		if (ParamsArray[3] == 'True') {
		
			var Lat = parseFloat(ParamsArray[10]);
			var Lng = parseFloat(ParamsArray[11]);
			
			var myLatlng = new google.maps.LatLng(Lat,Lng);
		
			createMarker(ParamsArray, myLatlng, BtnLabel, Diff);
			
			if ((ParamsArray[8] == 'places-visited.png' || ParamsArray[8] == 'places-unvisited.png')  && ParamsArray[12] == 'True') {
			
				createPLine(ParamsArray, Lat, Lng);
				
			}
			
		} else {
		
			var Lat = parseFloat(ParamsArray[1]);
			var Lng = parseFloat(ParamsArray[2]);
			
			var myLatlng = new google.maps.LatLng(Lat,Lng);
		
			createMarker(ParamsArray, myLatlng, BtnLabel, Diff);
			
			if ((ParamsArray[8] == 'places-visited.png' || ParamsArray[8] == 'places-unvisited.png')  && ParamsArray[12] == 'True') {
			
				createPLine(ParamsArray, Lat, Lng);
				
			}	
        					
		}	
					
	}
	
	function createMarker(ParamsArray, myLatlng, BtnLabel, Diff) {
	
		var marker = new google.maps.Marker({
		    position: myLatlng,
		    map: map,
		    icon: "https://google-maps-icons.googlecode.com/files/" + ParamsArray[8],
		    title: ParamsArray[0] + ' (' + Diff + ': ' + ParamsArray[9] + ')'
		});
				
		markersArray.push(marker);
						
		var content = '<div style="text-align:left;	font-family:Verdana; font-size:12px; font-weight:bold; font-style:normal;">' +
						'<p>' + ParamsArray[5] + " - " + ParamsArray[0] + 
							'<button id="' + ParamsArray[7] + '" class="buttonopendoc">' + BtnLabel + '</button>' +
						'</p>' +
					  '</div>';
							  
		        
		google.maps.event.addListener(marker, 'click', function() {
			infoWindow.setContent(content);
		    infoWindow.open(map, marker);
		});
					    
	}	
	
	function createPLine(ParamsArray, Lat, Lng) {
	
		if (SR == null) {
		
			SR = ParamsArray[0];
			StartLat = Lat;
			StartLng = Lng;
					
		} else {
		
			if (SR == ParamsArray[0]) {
		        
				var lineSymbol = {
				  	path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
  					fillColor: ParamsArray[13],
  					fillOpacity: 1.0
				};
				
				var flightPlanCoordinates = [
				    new google.maps.LatLng(StartLat, StartLng),
				    new google.maps.LatLng(Lat, Lng)
				];
				
				var flightPath = new google.maps.Polyline({
				    path: flightPlanCoordinates,
				    strokeColor: ParamsArray[13],
				    strokeOpacity: 1.0,
				    strokeWeight: 2.2,
				    icons: [{icon: lineSymbol, offset: '50%'},{icon: lineSymbol, offset: '100%'}]
				});

				flightPath.setMap(map);
				
				polylineArray.push(flightPath);
				
				StartLat = Lat;
				StartLng = Lng;
				
			} else {
			
				SR = ParamsArray[0];
				StartLat = Lat;
				StartLng = Lng;
			
			}
		
		}
		    
	}	
    
	function clearOverlays() {
	  
	  for (var i = 0; i < markersArray.length; i++ ) {
	    markersArray[i].setMap(null);
	  }
	  markersArray = [];
	  
	  for (var i = 0; i < polylineArray.length; i++ ) {
	    polylineArray[i].setMap(null);
	  }
	  polylineArray = [];
	  	  
	}
				
	</script>
    </head>
    <body onload="initialize()">
      
      <div id="map_canvas" style="width:100%; height:100%"></div>
    
    <INPUT type=hidden id=lat>
    <INPUT type=hidden id=lng>

    </body>
    </html>