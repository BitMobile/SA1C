&AtClient
Var FIELD_VALUE_TYPE;

&AtServer
Var FIELD_VALUE_TYPE;

&AtServer
Function GetFilter(DataCompositionField)
	
	ReportObject = FormDataToValue(Report, Type("ReportObject"));
	DataCompositionSchema = ReportObject.DataCompositionSchema;
	DataSets = DataCompositionSchema.DataSets;
	DataSet = DataSets[0];
	Field = DataSet.Fields.Find(DataCompositionField);
	ParameterValue = Field.EditParameters.Items.Find("ChoiceParameters").Value;
	
	Filter = New Map;
	
	For Each ChoiceParameter In ParameterValue Do
		
		Filter.Insert(ChoiceParameter.Name, ChoiceParameter.Value);
		
	EndDo;
	
	If ValueIsFilled(Field.ValueType) Then
		
		Filter.Insert(FIELD_VALUE_TYPE, Field.ValueType);
		
	EndIf;
	
	Return Filter;
	
EndFunction

&AtClient
Procedure SettingsComposerUserSettingsTableValueStartChoice(Item, ChoiceData, StandardProcessing)
	
	CurrentId = Item.Parent.Parent.CurrentRow;
	CurrentUserSetting = ThisForm.Report.SettingsComposer.UserSettings.GetObjectByID(CurrentId);
	CurrentUserSettingId = CurrentUserSetting.UserSettingID;
	CurrentSetting = Undefined;
	
	For Each Element In ThisForm.Report.SettingsComposer.Settings.Filter.Items Do
		
		If Element.UserSettingID = CurrentUserSettingId Then
			
			CurrentSetting = Element;
			
		EndIf;
		
	EndDo;
	
	If NOT CurrentSetting = Undefined Then
		
		If CurrentUserSetting.ComparisonType = DataCompositionComparisonType.InList OR 
			CurrentUserSetting.ComparisonType = DataCompositionComparisonType.InListByHierarchy OR
			CurrentUserSetting.ComparisonType = DataCompositionComparisonType.NotInList OR
			CurrentUserSetting.ComparisonType = DataCompositionComparisonType.NotInListByHierarchy Then
			
			Filter = GetFilter(CurrentSetting.LeftValue);
			
			FormParameters = New Structure;
			
			If Not Filter.Get(FIELD_VALUE_TYPE) = Undefined Then
				
				StandardProcessing = False;
				
				FormParameters.Insert(FIELD_VALUE_TYPE, Filter.Get(FIELD_VALUE_TYPE));
				
				Form = GetForm("CommonForm.ValueListForm", FormParameters, Item, , WindowOpenVariant.SingleWindow);
				
				For Each Row In Filter Do
					
					If Not Row.Key = "FieldValueType" Then
						
						NewRow = Form.Filter.Add();
						NewRow.FilterName = Row.Key;
						NewRow.Value = Row.Value;
						
					EndIf;
					
				EndDo;
				
				Form.ValueList.LoadValues(CurrentUserSetting.RightValue.UnloadValues());
				
				Form.Open();
				
			EndIf;
			
			
		EndIf;
			
	EndIf;
	
EndProcedure

FIELD_VALUE_TYPE = "FieldValueType";