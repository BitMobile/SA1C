
#Region CommonProcedureAndFunctions

&AtServer
Procedure OnCreateAtServer(Cancel, StandardProcessing)
	
	StringNumber 	= Parameters.StringNumber;
    Selector 		= Parameters.Selector;
    DataType 		= Parameters.DataType;
    OutletParameter = Parameters.OutletParameter;
	Source			= Parameters.Source;
	
    If TypeOf(Parameters.CurrentValue) = Type("ValueList") Then
		
		For Each Element In Parameters.CurrentValue Do
			
			AddRow = Values.Add();
			AddRow.ValueRow = Element.Value;
			
		EndDo;
		
	EndIf;
    
EndProcedure

&AtServer
Function IsOutletParameter(Value)
    
    If Value = "Catalog_OutletParameter" Then
		
		Return True;
		
	Else
		
		Return False;    	    
		
	EndIf; 
    
EndFunction

#EndRegion

#Region UserInterface

&AtClient
Procedure Ok(Command)

    List = new ValueList;
	
	For Each Element In Values Do
		
		List.Add(Element.ValueRow);    	    
		
	EndDo;

    ReturnStructure = New Structure("StringNumber, List", StringNumber, List);    
	
	Notify(Source, ReturnStructure, ThisForm);
	
	Close();
	
EndProcedure

&AtClient
Procedure ValuesValueRowStartChoice(Item, ChoiceData, StandardProcessing)
	
	StandardProcessing = False;
	
	If Not IsOutletParameter(Selector) Then
		
		Str = StrReplace(Selector, "_", ".");
        OpenForm(Str + ".ChoiceForm", , Item, , , , , FormWindowOpeningMode.LockWholeInterface);    	    
		
	Else
		
		OpenForm("Document.Questionnaire.Form.Input", New Structure("StringNumber, DataType, OutletParameter, Source, CurrentValue", Items.ValuesTable.CurrentData.GetID(), DataType, OutletParameter, "ListForm", Items.ValuesTable.CurrentData.ValueRow));                
		
	EndIf;    
	
EndProcedure

&AtClient
Procedure NotificationProcessing(EventName, Parameter, Source)
	
	If EventName = "ListForm" Then                       
		
		Items.ValuesTable.CurrentData.ValueRow = Parameter.Str;
		
	EndIf;
	
EndProcedure

&AtClient
Procedure ValuesTableBeforeEditEnd(Item, NewRow, CancelEdit, Cancel)
	
	If Not CancelEdit Then 
	
		If Not ValueIsFilled(Items.ValuesTable.CurrentData.ValueRow) Then 
			
			Message(NStr("en = 'Value is not selected'; ru = 'Значение не выбрано'"));
			
			Cancel = True;
			
		EndIf;
		
	EndIf;
		
EndProcedure

#EndRegion