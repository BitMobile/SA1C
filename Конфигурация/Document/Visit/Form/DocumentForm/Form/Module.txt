
&AtClient
Procedure OnOpen(Cancel)
    
    OnOpenServer();
	
    n = 0;
    
    For Each Str in Object.Questions Do
        
        Ins = TempQuestions.Add();
        Ins.N = n;
        Ins.Question = Str.Question;
        
        If ItsPicture(Str.Question) Then 
			Try
				SnapShotUUID = New UUID(Str.Answer);
			Except
			EndTry;
			If PictureExists(SnapShotUUID) Then
				
            	Ins.Answer = NStr("en = 'Snapshot'; ru = 'Фотоснимок'");
            	Ins.SnapShotUUID = Str.Answer;
				
			Else
				
				Ins.Answer = NStr("en = ""Picture not found on server""; ru = ""Изображение не найдено на сервере""");
				Ins.SnapShotUUID = Str.Answer;
				
			EndIf;
            
        Else 
            
            Ins.Answer = Str.Answer;
            
        EndIf;
        
        n = n + 1;
        
	EndDo;
    
    
    n = 0;
    For Each Str In Object.SKUs Do
    
    	Ins = TempSKUs.Add();
        Ins.N = n;
        Ins.SKU = Str.SKU;
        Ins.Available = Str.Available;
        Ins.Facing = ?(Str.Facing<>0, Str.Facing, "");
        Ins.Stock = ?(Str.Stock<>0, Str.Stock, ""); 
        Ins.Price = ?(Str.Price<>0, Str.Price, ""); 
        Ins.MarkUp = ?(Str.MarkUp<>0, Str.MarkUp, ""); 
        Ins.OutOfStock = Str.OutOfStock;
        If Not  IsBlankString(Str.Snapshot) Then
            Ins.SKUSnapShotUUID = Str.Snapshot;
            Ins.Snapshot = NStr("en = 'Snapshot'; ru = 'Фотоснимок'");        	
        EndIf;
        n = n + 1 ;
    EndDo;
	 
EndProcedure

&AtServer
Procedure OnOpenServer()

	If IsInRole("Admin") = False Then
        ThisForm.ReadOnly = True;
	EndIf; 
	
	Questionnaires.Parameters.SetParameterValue("Territories", GetTerritories());
	Questionnaires.Parameters.SetParameterValue("OutletType", Object.Outlet.Type);
	Questionnaires.Parameters.SetParameterValue("OutletClass", Object.Outlet.Class);
	
EndProcedure

&AtClient
Procedure QuestionsOnActivateRow(Item)
	
	If Items.Pages.CurrentPage = Items.GroupQuestions Then
	
		If Not Item.CurrentRow = Undefined Then	
		
			If ItsPicture(Item.CurrentData.Question) Then 
							
				SnapShotUUID = New UUID(Item.CurrentData.SnapShotUUID);
				
				SetPicture(SnapShotUUID);
				
			Else 
				
				PictureAddress		= Undefined;
				PictureExtension    = Undefined;
			
			EndIf;
			
		Else
			
			PictureAddress		= Undefined;
			PictureExtension    = Undefined;

		EndIf;
		
	EndIf;
		
EndProcedure

&AtClient
Procedure TempSKUsOnActivateRow(Item)
	
	If Items.Pages.CurrentPage = Items.GroupSKUs Then
	
	    If Not Item.CurrentRow = Undefined  Then	        
	        If Not Item.CurrentData.SKUSnapShotUUID = "" Then            
	            SnapShotUUID = New UUID(Item.CurrentData.SKUSnapShotUUID);			
	            SetPicture(SnapShotUUID);            
	        Else            
	            PictureAddress		= Undefined;
	            PictureExtension    = Undefined;                       
	        EndIf;                
	    Else        
	        PictureAddress		= Undefined;
	        PictureExtension    = Undefined;        
		EndIf;
		
	EndIf;	
    
EndProcedure

&AtServer
Procedure SetPicture(SnapShotUUID)
	
	SelectionStructure = New Structure("FileName");
	SelectionStructure.FileName = SnapShotUUID;
					
	Selection = InformationRegisters.StorageAdditionalInformation.Select(SelectionStructure);
	
	If Selection.Next() Then 
		
		PictureAddress 		= PutToTempStorage(Selection.Storage.Get(), ThisForm.UUID);
		PictureExtension	= Selection.Extension;
		
	EndIf;
				
EndProcedure

&AtServer
Function ItsPicture(Question)
	
	If Question.AnswerType = Enums.DataType.Snapshot Then 
		Return True;
	Else 
		Return False;
	EndIf;
			
EndFunction

&AtClient
Procedure OpenPicture(Command)
	
	FileName = Undefined;
	
	If ValueIsFilled(PictureAddress) Then 
		
		FileName = "picture" + PictureExtension;
		
	EndIf;
		
	If ValueIsFilled(FileName) Then 
		
		GetFile(PictureAddress, FileName, True);
		
	EndIf;
	
EndProcedure

&AtClient
Procedure PagesOnCurrentPageChange(Item, CurrentPage)
	
	If CurrentPage = Items.GroupQuestions Then
		
		QuestionsOnActivateRow(Items.TempQuestions);
        
    ElsIf CurrentPage = Items.GroupSKUs Then
        
        TempSKUsOnActivateRow(Items.TempSKUs);
		
	Else 
		
		PictureAddress = Undefined;
		PictureExtension = Undefined;
        
	EndIf;
			
EndProcedure

&AtServer
Function PictureExists(SnapShotUUID)
	
	SelectionStructure = New Structure("FileName");
	SelectionStructure.FileName = SnapShotUUID;
	
	Selection = InformationRegisters.StorageAdditionalInformation.Select(SelectionStructure);
	
	If Selection.Next() Then
		
		Return True;
		
	Else
		
		Return False;
		
	EndIf;

EndFunction

//territories query
Function  GetTerritories()
    
    Query = New Query;
    Query.Text = 
    "SELECT
    |   TerritoryOutlets.Ref.Ref
    |FROM
    |   Catalog.Territory.Outlets AS TerritoryOutlets
    |WHERE
    |   TerritoryOutlets.Outlet.Ref = &Ref";
    
    Query.SetParameter("Ref", Object.Outlet);
    
    Result = Query.Execute();
    
    Return Result.Unload().UnloadColumn("Ref");
    
EndFunction


&AtClient
Procedure QuestionnairesSelection(Item, SelectedRow, Field, StandardProcessing)
	OpenValue(Item.CurrentData.Ref);
EndProcedure

