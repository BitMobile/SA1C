Перем ПараметрыОбработкиПользователяИБ; // Параметры, заполняемые при обработке пользователя ИБ.
                                        // Используются в обработчике события ПриЗаписи.

Перем ЭтоНовый; // Показывает, что был записан новый объект.
                // Используются в обработчике события ПриЗаписи.

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Программный интерфейс объекта реализован через ДополнительныеСвойства:
//
// ОписаниеПользователяИБ - Структура со свойствами:
//   Действие - Строка - "Записать" или "Удалить".
//
//   1. Если Действие = "Удалить" другие свойства не требуются. Удаление
//      будет считаться успешным и в том случае, когда пользовательИБ
//      не найден по значению реквизита UserID.
//
//   2. Если Действие = "Записать", тогда будет создан или обновлен
//      пользователь ИБ по указанным свойствам.
//
//      Состав свойств указывается аналогично составу свойств параметра
//      ОбновляемыеСвойства для процедуры Пользователи.ЗаписатьПользователяИБ(),
//      кроме свойства ПолноеИмя - устанавливается по Наименованию.
//
//      Для привязки существующего свободного пользователя ИБ к свободному элементу
//      справочника, нужно вставить свойство УникальныйИдентификатор.
//
//   При выполнении действий "Записать" и "Удалить" реквизит объекта
//   UserID обновляется автоматически, его не следует изменять.
//
//   После выполнения действия в структуру вставляются (обновляются) следующие свойства.
//   РезультатДействия - Строка, содержащая одно из значений:
//     "ДобавленПользовательИБ", "ИзмененПользовательИБ", "УдаленПользовательИБ",
//     "ОчищенаСвязьСНесуществующимПользователемИБ", "НеТребуетсяУдалениеПользовательИБ".
//   УникальныйИдентификатор - УникальныйИдентификатор пользователя ИБ.


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ)
		
	ЭтоНовый = ЭтоНовый();
	
	ПользователиСлужебный.НачатьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
	Если ЭтотОбъект.Role = "SR" ИЛИ ЭтотОбъект.Role = "SRM" Тогда
		Если НЕ ValueIsFilled(ЭтотОбъект.Password) Тогда
			Отказ = Истина;
			Message(NStr("ru='Пароль пользователя не может быть пустым';en='Password cannot be empty'"));
		КонецЕсли;
	КонецЕсли;
	
	If UserNameExists() Then 
		Отказ = Истина;
		Message(NStr("ru='This login is already used';en='Этот логин уже используется'"));
	EndIf;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
		
    ПользователиСлужебный.ЗавершитьОбработкуПользователяИБ(
        ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДополнительныеСвойства.Вставить("ЗначениеКопирования", ОбъектКопирования.Ссылка);
	
	UserID = Неопределено;
	
КонецПроцедуры

Function UserNameExists()
	FoundUser = Catalogs.User.FindByAttribute("UserName", ThisObject.UserName);
	If FoundUser = Catalogs.User.EmptyRef() Then
		Result = False;
	Else
		If FoundUser = ThisObject.Ref Then
			Result = False;
		Else
			Result = True;
		EndIf;
	EndIf;
	Return Result;
EndFunction
