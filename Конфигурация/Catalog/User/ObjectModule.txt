#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


Перем ПараметрыОбработкиПользователяИБ; // Параметры, заполняемые при обработке пользователя ИБ.
                                        // Используются в обработчике события ПриЗаписи.

Перем ЭтоНовый; // Показывает, что был записан новый объект.
                // Используются в обработчике события ПриЗаписи.

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Программный интерфейс объекта реализован через ДополнительныеСвойства:
//
// ОписаниеПользователяИБ - Структура со свойствами:
//   Действие - Строка - "Записать" или "Удалить".
//
//   1. Если Действие = "Удалить" другие свойства не требуются. Удаление
//      будет считаться успешным и в том случае, когда пользовательИБ
//      не найден по значению реквизита UserID.
//
//   2. Если Действие = "Записать", тогда будет создан или обновлен
//      пользователь ИБ по указанным свойствам.
//
//      Состав свойств указывается аналогично составу свойств параметра
//      ОбновляемыеСвойства для процедуры Пользователи.ЗаписатьПользователяИБ(),
//      кроме свойства ПолноеИмя - устанавливается по Наименованию.
//
//      Для привязки существующего свободного пользователя ИБ к свободному элементу
//      справочника, нужно вставить свойство УникальныйИдентификатор.
//
//   При выполнении действий "Записать" и "Удалить" реквизит объекта
//   UserID обновляется автоматически, его не следует изменять.
//
//   После выполнения действия в структуру вставляются (обновляются) следующие свойства.
//   РезультатДействия - Строка, содержащая одно из значений:
//     "ДобавленПользовательИБ", "ИзмененПользовательИБ", "УдаленПользовательИБ",
//     "ОчищенаСвязьСНесуществующимПользователемИБ", "НеТребуетсяУдалениеПользовательИБ".
//   УникальныйИдентификатор - УникальныйИдентификатор пользователя ИБ.


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = ЭтоНовый();
	
	ПользователиСлужебный.НачатьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
    ПользователиСлужебный.ЗавершитьОбработкуПользователяИБ(
        ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеДействияПередУдалениемВОбычномРежимеИПриОбмененДанными();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДополнительныеСвойства.Вставить("ЗначениеКопирования", ОбъектКопирования.Ссылка);
	
	UserID = Неопределено;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОбщиеДействияПередУдалениемВОбычномРежимеИПриОбмененДанными() Экспорт
	
	Если  НЕ Пользователи.ЭтоНеразделенныйПользователь(UserID) Тогда
	 
		// Требуется удалить пользователя ИБ, иначе он попадет в список ошибок в форме ПользователиИБ,
		// кроме того, вход под этим пользователем ИБ приведет к ошибке.
		
		ОписаниеПользователяИБ = Новый Структура;
		ОписаниеПользователяИБ.Вставить("Действие", "Удалить");
		ДополнительныеСвойства.Вставить("ОписаниеПользователяИБ", ОписаниеПользователяИБ);
		
		ПользователиСлужебный.НачатьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ, Истина);
		ПользователиСлужебный.ЗавершитьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли