
///////////////////////////////////////////////////////
// Common procedure and functions

&AtServer
Procedure OnCreateAtServer(Cancel, StandardProcessing)
	
	Items.Owner.Enabled = Not ValueIsFilled(Object.Ref);
	
	OwnerOnChangeAtServer();
	
EndProcedure

&AtServer
Procedure AfterWriteAtServer(CurrentObject, WriteParameters)
	
	Items.Owner.Enabled = Not ValueIsFilled(Object.Ref);
	
EndProcedure

&AtServer
Function AnswerTypeOnChangeServer()

    If Object.AnswerType = Enums.DataType.ValueList Then
		
		Return True;
		
	Else 
		
		Return False;
		
	EndIf;
    
EndFunction

&AtServer
Function NotAllowed()
	
	If Object.AnswerType = Enums.DataType.ValueList And Object.ValueList.Count() = 0 Then
		
		Message(NStr("en = 'Tabular section couldn''t be empty!'; ru = 'Табличная часть не может быть пустой!'"));
		
		Return True;
		
	EndIf;
	
	Return False;
	
EndFunction

&AtServer
Function GetValueList()
	
	Return Enums.DataType.ValueList;
	
EndFunction

&AtClient
Procedure BeforeWrite(Cancel, WriteParameters)
    
    If NotAllowed() Then       
		
		Cancel = True;   
		
	EndIf; 
    
EndProcedure

&AtServer
Procedure OwnerOnChangeAtServer()
	
	If Object.Owner = Catalogs.QuestionGroup.EmptyRef() Or Object.Owner.Type = Enums.QuestionGroupTypes.Regular Then 
		
		Items.Assignment.Enabled = False;
		
		Object.Assignment = Undefined;
		
	Else 
		
		Items.Assignment.Enabled = True;
		
	EndIf;	
	
EndProcedure

&AtServer
Function GetAssignmentList(AnswerType)
	
	ValueList = New ValueList;
	
	If AnswerType = Enums.DataType.Snapshot Then
		
		ValueList.Add(Enums.SKUQuestions.Snapshot);
		
	EndIf;
	
	If AnswerType = Enums.DataType.Boolean Then 
		
		ValueList.Add(Enums.SKUQuestions.OutOfStock);
		ValueList.Add(Enums.SKUQuestions.Available);
		
	EndIf;
	
	If AnswerType = Enums.DataType.Decimal Then 
		
		ValueList.Add(Enums.SKUQuestions.Facing);
		ValueList.Add(Enums.SKUQuestions.MarkUp);
		ValueList.Add(Enums.SKUQuestions.Price);
		ValueList.Add(Enums.SKUQuestions.Stock);
		
	EndIf; 
	
	Return ValueList;
	
EndFunction

&AtServer
Procedure CheckAssignment()
	
	If Object.AnswerType = Enums.DataType.Snapshot And Not Object.Assignment = Enums.SKUQuestions.Snapshot Then
		
		Object.Assignment = Undefined;
		
	ElsIf Object.AnswerType = Enums.DataType.Boolean And Not (Object.Assignment = Enums.SKUQuestions.OutOfStock Or Object.Assignment = Enums.SKUQuestions.Available) Then 
		
		Object.Assignment = Undefined;
		
	ElsIf Object.AnswerType = Enums.DataType.Decimal And Not (Object.Assignment = Enums.SKUQuestions.Facing Or
													Object.Assignment = Enums.SKUQuestions.MarkUp Or 
													Object.Assignment = Enums.SKUQuestions.Price Or 
													Object.Assignment = Enums.SKUQuestions.Stock) Then 
		
		Object.Assignment = Undefined;
		
	ElsIf Not (Object.AnswerType = Enums.DataType.Snapshot Or Object.AnswerType = Enums.DataType.Boolean Or Object.AnswerType = Enums.DataType.Decimal) Then  
		
		Object.Assignment = Undefined;
		
	EndIf; 
	
EndProcedure


///////////////////////////////////////////////////////
// User interface

&AtClient
Procedure OnOpen(Cancel)
    
    If Object.ValueList.Count() = 0 Then
		
		Items.ValueList.Enabled = False;
		
	EndIf;
    	
EndProcedure

&AtClient
Procedure NotificationProcessing(EventName, Parameter, Source)
	
	If EventName = "ClearQuestions" And Parameter = "Ok" Then
		
		Object.ValueList.Clear();
		
		Items.ValueList.Enabled = False;
		
	EndIf;
	
	If EventName = "ClearQuestions" And Parameter = "Cancel" Then
		
		Object.AnswerType = GetValueList();
		
	EndIf;
	
EndProcedure

&AtClient
Procedure AnswerTypeOnChange(Item)
     
    If AnswerTypeOnChangeServer() Then
		
		Items.ValueList.Enabled = True;
		
	Else
		
		If Not Object.ValueList.Count() = 0 Then
			
			Text = "en = ""The tabular section will be cleaned. 
            |Are you sure you want to continue?"";
            |ru = ""Табличная часть будет очищена.
            |Продолжить?""";
			
			OpenForm("CommonForm.DoQueryBox", New Structure("Text, Source", NStr(Text), "ClearQuestions"));
			
		Else
			
			Items.ValueList.Enabled = False;
			
		EndIf;
		
	EndIf;
	
	// Проверить соответствие назначения и типа ответа
	CheckAssignment();
	
EndProcedure

&AtClient
Procedure OwnerOnChange(Item)
	
	OwnerOnChangeAtServer();
	
EndProcedure

&AtClient
Procedure AssignmentStartChoice(Item, ChoiceData, StandardProcessing)
	
	StandardProcessing = False;
	
	ValueList = GetAssignmentList(Object.AnswerType);
	
	ShowChooseFromList(New NotifyDescription("ChooseAssignmentProcessing", ThisForm), ValueList, Item);
	
EndProcedure

&AtClient
Procedure ChooseAssignmentProcessing(Result, Parameters) Export
	
	If Not Result = Undefined Then

		Object.Assignment = Result.Value;
				
	EndIf;
	
EndProcedure


